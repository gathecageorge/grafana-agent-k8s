---
# org-loki.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: org-loki-configmap
data:
  org-loki.yml: |-
    {{ .Files.Get "org-loki.yml" | toString | nindent 4 }}

---
# org-prom.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: org-prom-configmap
data:
  org-prom.yml: |-
    {{ .Files.Get "org-prom.yml" | toString | nindent 4 }}

---
# entrypoint.sh
apiVersion: v1
kind: ConfigMap
metadata:
  name: entrypoint-configmap
data:
  entrypoint.sh: |-
    {{ .Files.Get "entrypoint.sh" | toString | nindent 4 }}

---
# prometheus.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
data:
  prometheus.yml: |-
    {{ .Files.Get "prometheus.yml" | toString | nindent 4 }}

---
# promtail.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-configmap
data:
  promtail.yml: |-
    {{ .Files.Get "promtail.yml" | toString | nindent 4 }}

---
# grafana deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: myadmin
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: mypass

---
# grafana service
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30000

---
# prometheus deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        args: ["--enable-feature=remote-write-receiver", "--config.file=/etc/prometheus/config.yml"]
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: org-prom-configmap
          mountPath: /etc/prometheus/config.yml
      volumes:
      - name: org-prom-configmap
        configMap:
          name: org-prom-configmap
---
# prometheus service
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    nodePort: 30001

---
# loki deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: grafana/loki:latest
        args: ["--config.file=/etc/loki/config.yml"]
        ports:
        - containerPort: 3100
        volumeMounts:
        - name: org-loki-configmap
          mountPath: /etc/loki/config.yml
      volumes:
      - name: org-loki-configmap
        configMap:
          name: org-loki-configmap

